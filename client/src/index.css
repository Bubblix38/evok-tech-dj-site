@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 280 5% 96%;

  --foreground: 280 15% 15%;

  --border: 280 8% 85%;

  --card: 280 4% 92%;

  --card-foreground: 280 15% 18%;

  --card-border: 280 6% 88%;

  --sidebar: 280 6% 90%;

  --sidebar-foreground: 280 15% 20%;

  --sidebar-border: 280 8% 86%;

  --sidebar-primary: 280 75% 60%;

  --sidebar-primary-foreground: 280 15% 98%;

  --sidebar-accent: 280 10% 82%;

  --sidebar-accent-foreground: 280 20% 25%;

  --sidebar-ring: 280 75% 60%;

  --popover: 280 6% 88%;

  --popover-foreground: 280 15% 22%;

  --popover-border: 280 8% 84%;

  --primary: 280 75% 55%;

  --primary-foreground: 280 10% 98%;

  --secondary: 280 8% 85%;

  --secondary-foreground: 280 15% 25%;

  --muted: 280 8% 86%;

  --muted-foreground: 280 15% 40%;

  --accent: 280 12% 82%;

  --accent-foreground: 280 20% 28%;

  --destructive: 0 75% 55%;

  --destructive-foreground: 0 10% 98%;

  --input: 280 15% 75%;
  --ring: 280 75% 60%;
  --chart-1: 280 80% 45%;
  --chart-2: 45 85% 45%;
  --chart-3: 200 75% 45%;
  --chart-4: 320 70% 45%;
  --chart-5: 160 70% 40%;

  --font-sans: Orbitron, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(280 15% 10% / 0.05);
  --shadow-xs: 0px 2px 0px 0px hsl(280 15% 10% / 0.08);
  --shadow-sm: 0px 2px 0px 0px hsl(280 15% 10% / 0.08), 0px 1px 2px -1px hsl(280 15% 10% / 0.10);
  --shadow: 0px 2px 0px 0px hsl(280 15% 10% / 0.10), 0px 1px 2px -1px hsl(280 15% 10% / 0.12);
  --shadow-md: 0px 2px 0px 0px hsl(280 15% 10% / 0.12), 0px 2px 4px -1px hsl(280 15% 10% / 0.15);
  --shadow-lg: 0px 2px 0px 0px hsl(280 15% 10% / 0.15), 0px 4px 6px -1px hsl(280 15% 10% / 0.18);
  --shadow-xl: 0px 2px 0px 0px hsl(280 15% 10% / 0.18), 0px 8px 10px -1px hsl(280 15% 10% / 0.20);
  --shadow-2xl: 0px 2px 0px 0px hsl(280 15% 10% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  
  /* Vite 5 removes empty fallback selectors, but this should be kept for browsers */
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 280 15% 12%;

  --foreground: 280 8% 88%;

  --border: 280 12% 20%;

  --card: 280 12% 16%;

  --card-foreground: 280 8% 85%;

  --card-border: 280 12% 22%;

  --sidebar: 280 10% 14%;

  --sidebar-foreground: 280 8% 82%;

  --sidebar-border: 280 12% 18%;

  --sidebar-primary: 280 75% 65%;

  --sidebar-primary-foreground: 280 10% 15%;

  --sidebar-accent: 280 12% 20%;

  --sidebar-accent-foreground: 280 8% 80%;

  --sidebar-ring: 280 75% 65%;

  --popover: 280 12% 18%;

  --popover-foreground: 280 8% 80%;

  --popover-border: 280 12% 24%;

  --primary: 280 75% 65%;

  --primary-foreground: 280 10% 15%;

  --secondary: 280 12% 22%;

  --secondary-foreground: 280 8% 78%;

  --muted: 280 12% 20%;

  --muted-foreground: 280 8% 65%;

  --accent: 280 15% 18%;

  --accent-foreground: 280 8% 75%;

  --destructive: 0 70% 58%;

  --destructive-foreground: 0 8% 92%;

  --input: 280 15% 30%;
  --ring: 280 75% 65%;
  --chart-1: 280 80% 70%;
  --chart-2: 45 85% 70%;
  --chart-3: 200 75% 70%;
  --chart-4: 320 70% 70%;
  --chart-5: 160 70% 65%;

  --shadow-2xs: 0px 2px 0px 0px hsl(280 15% 5% / 0.30);
  --shadow-xs: 0px 2px 0px 0px hsl(280 15% 5% / 0.35);
  --shadow-sm: 0px 2px 0px 0px hsl(280 15% 5% / 0.35), 0px 1px 2px -1px hsl(280 15% 5% / 0.40);
  --shadow: 0px 2px 0px 0px hsl(280 15% 5% / 0.40), 0px 1px 2px -1px hsl(280 15% 5% / 0.45);
  --shadow-md: 0px 2px 0px 0px hsl(280 15% 5% / 0.45), 0px 2px 4px -1px hsl(280 15% 5% / 0.50);
  --shadow-lg: 0px 2px 0px 0px hsl(280 15% 5% / 0.50), 0px 4px 6px -1px hsl(280 15% 5% / 0.55);
  --shadow-xl: 0px 2px 0px 0px hsl(280 15% 5% / 0.55), 0px 8px 10px -1px hsl(280 15% 5% / 0.60);
  --shadow-2xl: 0px 2px 0px 0px hsl(280 15% 5% / 0.70);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Scanlines animation for retro background effect */
  @keyframes scanlines {
    0% {
      transform: translateY(0px);
    }
    100% {
      transform: translateY(1px);
    }
  }

  /* Scanlines overlay with different opacities for light/dark mode */
  .scanlines-overlay {
    background: repeating-linear-gradient(0deg, rgba(0,0,0,.03) 0 1px, transparent 1px 3px);
    animation: scanlines 6s linear infinite;
    opacity: 0.05;
  }

  .dark .scanlines-overlay {
    background: repeating-linear-gradient(0deg, rgba(0,0,0,.05) 0 1px, transparent 1px 3px);
    opacity: 0.05;
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    .scanlines-overlay {
      animation: none;
    }
  }

  /* Retro Music Effects Animations */
  
  /* Disco spinning effects */
  .disco-spinning {
    animation: disco-spin 3s linear infinite;
    will-change: transform;
  }

  .disco-spinning-reverse {
    animation: disco-spin-reverse 4s linear infinite;
    will-change: transform;
  }

  .disco-spinning-slow {
    animation: disco-spin 6s linear infinite;
    will-change: transform;
  }

  @keyframes disco-spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  @keyframes disco-spin-reverse {
    from { transform: rotate(360deg); }
    to { transform: rotate(0deg); }
  }

  /* Light beam radiant effects */
  .light-beam-radiant {
    animation: beam-pulse 2.5s ease-in-out infinite alternate;
  }

  @keyframes beam-pulse {
    0% { 
      opacity: 0.3; 
      transform: scaleY(0.8);
    }
    100% { 
      opacity: 0.8; 
      transform: scaleY(1.2);
    }
  }

  /* Sound wave ring effects */
  .sound-wave-ring {
    animation: sound-ring 2s ease-out infinite;
  }

  @keyframes sound-ring {
    0% {
      opacity: 0.8;
      transform: scale(0.8);
    }
    100% {
      opacity: 0;
      transform: scale(2);
    }
  }

  /* Disco reflection effect */
  .disco-reflection {
    animation: reflection-shimmer 1.5s ease-in-out infinite alternate;
  }

  @keyframes reflection-shimmer {
    0% { 
      opacity: 0.6;
      transform: translate(-50%, -50%) scale(0.9);
    }
    100% { 
      opacity: 1;
      transform: translate(-50%, -50%) scale(1.1);
    }
  }

  /* Light streak effect */
  .light-streak {
    animation: streak-sweep 3s ease-in-out infinite;
  }

  @keyframes streak-sweep {
    0% { opacity: 0.2; }
    50% { opacity: 0.8; }
    100% { opacity: 0.2; }
  }

  /* Sparkle effects */
  .sparkle {
    animation: sparkle-twinkle 4s ease-in-out infinite;
    border-radius: 50%;
  }

  @keyframes sparkle-twinkle {
    0%, 100% { 
      opacity: 0;
      transform: scale(0.5);
    }
    50% { 
      opacity: 1;
      transform: scale(1.5);
    }
  }

  /* Gradient radial utility */
  .bg-gradient-radial {
    background: radial-gradient(circle, var(--tw-gradient-stops));
  }

  /* Radio player volume slider styles */
  .volume-slider {
    background: linear-gradient(to right, 
      #facc15 0%, 
      #f97316 var(--volume, 70%), 
      #7c3aed var(--volume, 70%)
    );
  }

  .volume-slider::-webkit-slider-thumb {
    appearance: none;
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: linear-gradient(135deg, #facc15, #f97316);
    cursor: pointer;
    border: 2px solid #581c87;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  .volume-slider::-webkit-slider-thumb:hover {
    transform: scale(1.1);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
  }

  .volume-slider::-moz-range-thumb {
    width: 18px;
    height: 18px;
    border-radius: 50%;
    background: linear-gradient(135deg, #facc15, #f97316);
    cursor: pointer;
    border: 2px solid #581c87;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  }

  /* Disable effects for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .disco-spinning,
    .disco-spinning-reverse,
    .disco-spinning-slow,
    .light-beam-radiant,
    .sound-wave-ring,
    .disco-reflection,
    .light-streak,
    .sparkle {
      animation: none !important;
    }
  }
}